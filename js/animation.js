// js/animation.js - –ê–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ñ–æ–Ω —Å —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏ –∫–æ–¥–∞

// –ú–∞—Å—Å–∏–≤—ã —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏
const codeElementsArray = [
    "</>", "<div>", "</div>", "<script>", "</script>", "@app", ".JSON",
    "const", "let", "var", "function", "return", "if", "else", "try", "catch",
    "{}", "[]", "()", "=>", "&&", "||", "==", "!=", "++", "--",
    "async", "await", "fetch", "API", "JSON", "HTML", "CSS", "JS",
    "import", "export", "class", "extends", "super", "this", "new",
    "for", "while", "switch", "case", "break", "continue",
    "true", "false", "null", "undefined", "NaN", "Infinity"
];

const emojisArray = ["üòá", "üòà", "üíª", "‚ö°", "üî•", "‚ú®", "üöÄ", "üíØ", "üéØ", "üåü"];

// –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞–Ω–∏–º–∞—Ü–∏–µ–π
let animationRunning = false;
let animationIntervals = [];

// –°–æ–∑–¥–∞–Ω–∏–µ –æ–¥–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –∞–Ω–∏–º–∞—Ü–∏–∏
function createCodeElement() {
    const background = document.getElementById("codeBackground");
    if (!background) {
        console.warn('–§–æ–Ω –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω');
        return;
    }

    const element = document.createElement("div");
    element.className = "code-element";

    // –°–ª—É—á–∞–π–Ω—ã–π –≤—ã–±–æ—Ä –º–µ–∂–¥—É –∫–æ–¥–æ–º –∏ —ç–º–æ–¥–∑–∏
    const isEmoji = Math.random() < 0.3;

    if (isEmoji) {
        element.textContent = getRandomEmoji();
        element.classList.add("emoji");
    } else {
        element.textContent = getRandomCodeElement();
        element.classList.add(getRandomSize());
    }

    // –ü—Ä–∏–º–µ–Ω—è–µ–º —Å–ª—É—á–∞–π–Ω—É—é –∞–Ω–∏–º–∞—Ü–∏—é
    applyRandomAnimation(element);

    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–ª—É—á–∞–π–Ω—É—é –ø–æ–∑–∏—Ü–∏—é
    setRandomPosition(element);

    // –î–æ–±–∞–≤–ª—è–µ–º –≤ DOM
    background.appendChild(element);

    // –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é
    requestAnimationFrame(() => {
        element.classList.add("animate", getRandomBounceAnimation());
    });

    // –£–¥–∞–ª—è–µ–º —ç–ª–µ–º–µ–Ω—Ç –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∞–Ω–∏–º–∞—Ü–∏–∏
    scheduleElementRemoval(element);
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ª—É—á–∞–π–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –∫–æ–¥–∞
function getRandomCodeElement() {
    return codeElementsArray[Math.floor(Math.random() * codeElementsArray.length)];
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ª—É—á–∞–π–Ω–æ–≥–æ —ç–º–æ–¥–∑–∏
function getRandomEmoji() {
    return emojisArray[Math.floor(Math.random() * emojisArray.length)];
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ª—É—á–∞–π–Ω–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞
function getRandomSize() {
    const sizes = ["small", "medium", "large"];
    return sizes[Math.floor(Math.random() * sizes.length)];
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ª—É—á–∞–π–Ω–æ–π –∞–Ω–∏–º–∞—Ü–∏–∏ –æ—Ç—Å–∫–æ–∫–∞
function getRandomBounceAnimation() {
    const bounceAnimations = ["bounce-left", "bounce-right", "bounce-center"];
    return bounceAnimations[Math.floor(Math.random() * bounceAnimations.length)];
}

// –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Å–ª—É—á–∞–π–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∞–Ω–∏–º–∞—Ü–∏–∏
function applyRandomAnimation(element) {
    // –°–ª—É—á–∞–π–Ω—ã–µ –∑–∞–¥–µ—Ä–∂–∫–∞ –∏ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å
    const delay = Math.random() * 3; // 0-3 —Å–µ–∫—É–Ω–¥—ã
    const duration = 6 + Math.random() * 6; // 6-12 —Å–µ–∫—É–Ω–¥

    element.style.animationDelay = delay + "s";
    element.style.animationDuration = duration + "s";

    return { delay, duration };
}

// –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–ª—É—á–∞–π–Ω–æ–π –ø–æ–∑–∏—Ü–∏–∏
function setRandomPosition(element) {
    // –ü–æ–∑–∏—Ü–∏—è –ø–æ X –æ—Ç 5% –¥–æ 95% —à–∏—Ä–∏–Ω—ã —ç–∫—Ä–∞–Ω–∞
    const leftPosition = Math.random() * 90 + 5;
    element.style.left = leftPosition + "%";
}

// –ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–∞
function scheduleElementRemoval(element) {
    const delay = parseFloat(element.style.animationDelay) || 0;
    const duration = parseFloat(element.style.animationDuration) || 6;
    const totalTime = (delay + duration + 2) * 1000; // +2 —Å–µ–∫—É–Ω–¥—ã –∑–∞–ø–∞—Å

    setTimeout(() => {
        if (element.parentNode) {
            element.parentNode.removeChild(element);
        }
    }, totalTime);
}

// –°–æ–∑–¥–∞–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å —Å–ª—É—á–∞–π–Ω—ã–º–∏ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞–º–∏
function createElementsWithRandomInterval() {
    if (!animationRunning) return;

    createCodeElement();

    // –°–ª–µ–¥—É—é—â–∏–π —ç–ª–µ–º–µ–Ω—Ç —á–µ—Ä–µ–∑ —Å–ª—É—á–∞–π–Ω—ã–π –∏–Ω—Ç–µ—Ä–≤–∞–ª
    const nextInterval = 1500 + Math.random() * 2000; // 1.5-3.5 —Å–µ–∫—É–Ω–¥
    setTimeout(createElementsWithRandomInterval, nextInterval);
}

// –ó–∞–ø—É—Å–∫ –∞–Ω–∏–º–∞—Ü–∏–∏ —Ñ–æ–Ω–∞
function startCodeAnimation() {
    if (animationRunning) {
        console.log('–ê–Ω–∏–º–∞—Ü–∏—è —É–∂–µ –∑–∞–ø—É—â–µ–Ω–∞');
        return;
    }

    console.log("–ó–∞–ø—É—Å–∫ –∞–Ω–∏–º–∞—Ü–∏–∏ —Ñ–æ–Ω–∞...");
    animationRunning = true;

    // –°–æ–∑–¥–∞–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å—Ä–∞–∑—É —Å —Ä–∞–∑–Ω—ã–º–∏ –∑–∞–¥–µ—Ä–∂–∫–∞–º–∏
    for (let i = 0; i < 3; i++) {
        setTimeout(createCodeElement, i * (1000 + Math.random() * 1000));
    }

    // –ó–∞–ø—É—Å–∫–∞–µ–º –Ω–µ–ø—Ä–µ—Ä—ã–≤–Ω–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤
    setTimeout(createElementsWithRandomInterval, 3000);
}

// –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∞–Ω–∏–º–∞—Ü–∏–∏ —Ñ–æ–Ω–∞
function stopCodeAnimation() {
    console.log("–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∞–Ω–∏–º–∞—Ü–∏–∏ —Ñ–æ–Ω–∞...");
    animationRunning = false;

    // –û—á–∏—â–∞–µ–º –≤—Å–µ –∏–Ω—Ç–µ—Ä–≤–∞–ª—ã
    animationIntervals.forEach(interval => clearInterval(interval));
    animationIntervals = [];

    // –£–¥–∞–ª—è–µ–º –≤—Å–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã –∞–Ω–∏–º–∞—Ü–∏–∏
    const background = document.getElementById("codeBackground");
    if (background) {
        const elements = background.querySelectorAll('.code-element');
        elements.forEach(element => element.remove());
    }
}

// –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –∞–Ω–∏–º–∞—Ü–∏–∏
function restartCodeAnimation() {
    stopCodeAnimation();
    setTimeout(startCodeAnimation, 500);
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∞–Ω–∏–º–∞—Ü–∏–∏
function isAnimationRunning() {
    return animationRunning;
}

// –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ—Å—Ç—å—é –∞–Ω–∏–º–∞—Ü–∏–∏
function setAnimationIntensity(level) {
    // level: 'low', 'medium', 'high'
    const settings = {
        low: { elements: 1, interval: [3000, 5000] },
        medium: { elements: 3, interval: [1500, 3500] },
        high: { elements: 5, interval: [800, 2000] }
    };

    const config = settings[level] || settings.medium;

    // –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º —Å –Ω–æ–≤—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
    stopCodeAnimation();

    setTimeout(() => {
        animationRunning = true;

        for (let i = 0; i < config.elements; i++) {
            setTimeout(createCodeElement, i * 500);
        }

        setTimeout(createElementsWithRandomInterval, 2000);
    }, 500);
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∞–Ω–∏–º–∞—Ü–∏–∏
function initAnimation() {
    console.log('üé¨ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∞–Ω–∏–º–∞—Ü–∏–∏...');

    // –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏ –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
    let background = document.getElementById("codeBackground");
    if (!background) {
        background = document.createElement("div");
        background.id = "codeBackground";
        background.className = "code-background";
        document.body.insertBefore(background, document.body.firstChild);
    }

    return true;
}

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–Ω–∏–º–∞—Ü–∏–∏ –ø–æ–¥ —Ä–∞–∑–º–µ—Ä —ç–∫—Ä–∞–Ω–∞
function adjustAnimationForScreen() {
    const isMobile = window.innerWidth <= 768;

    if (isMobile) {
        setAnimationIntensity('low');
    } else {
        setAnimationIntensity('medium');
    }
}

// –£–Ω–∏—á—Ç–æ–∂–µ–Ω–∏–µ –∞–Ω–∏–º–∞—Ü–∏–∏
function destroyAnimation() {
    stopCodeAnimation();

    const background = document.getElementById("codeBackground");
    if (background) {
        background.innerHTML = '';
    }
}

// –ê–Ω–∏–º–∞—Ü–∏—è —Ç—Ä—è—Å–∫–∏ Telegram –∫–Ω–æ–ø–∫–∏ –∫–∞–∂–¥—ã–µ 7 —Å–µ–∫—É–Ω–¥
function initTelegramShake() {
    const telegramBtn = document.querySelector('.telegram-contact');
    if (!telegramBtn) return;

    setInterval(() => {
        telegramBtn.classList.add('shake-active');
        setTimeout(() => {
            telegramBtn.classList.remove('shake-active');
        }, 500);
    }, 7000);
}



console.log('üîß animation.js –∑–∞–≥—Ä—É–∂–µ–Ω, —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏...');
window.initAnimation = initAnimation;
window.startCodeAnimation = startCodeAnimation;
window.stopCodeAnimation = stopCodeAnimation;
window.restartCodeAnimation = restartCodeAnimation;
window.setAnimationIntensity = setAnimationIntensity;
window.adjustAnimationForScreen = adjustAnimationForScreen;
window.destroyAnimation = destroyAnimation;
window.initTelegramShake = initTelegramShake;