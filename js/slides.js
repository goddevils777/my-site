// js/slides.js - –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–ª–∞–π–¥–∞–º–∏


function getContactHTML() {
    return `
        <div class="contact-info">
            <a href="https://t.me/god_devils_666_777" target="_blank" class="telegram-contact">
                <svg width="20" height="20" viewBox="0 0 24 24" fill="currentColor">
                    <path d="M11.944 0A12 12 0 0 0 0 12a12 12 0 0 0 12 12 12 12 0 0 0 12-12A12 12 0 0 0 12 0a12 12 0 0 0-.056 0zm4.962 7.224c.1-.002.321.023.465.14a.506.506 0 0 1 .171.325c.016.093.036.306.02.472-.18 1.898-.962 6.502-1.36 8.627-.168.9-.499 1.201-.82 1.23-.696.065-1.225-.46-1.9-.902-1.056-.693-1.653-1.124-2.678-1.8-1.185-.78-.417-1.21.258-1.91.177-.184 3.247-2.977 3.307-3.23.007-.032.014-.15-.056-.212s-.174-.041-.249-.024c-.106.024-1.793 1.14-5.061 3.345-.48.33-.913.49-1.302.48-.428-.008-1.252-.241-1.865-.44-.752-.245-1.349-.374-1.297-.789.027-.216.325-.437.893-.663 3.498-1.524 5.83-2.529 6.998-3.014 3.332-1.386 4.025-1.627 4.476-1.635z"/>
                </svg>
                @god_devils_666_777
            </a>
        </div>
    `;
}

function generateBaseSlides() {
    const contactHTML = getContactHTML();
    
    return [
        // –°–ª–∞–π–¥ 1 - HELLO
        `<div class="slide active" id="slide1">
            <div class="header">
                <span class="emoji">üòá</span>
                <span class="text">God & Devils</span>
                <span class="emoji">üòà</span>
            </div>
            <div class="main">
                <h1 class="hello-text">&lt;/ HELLO &gt;</h1>
            </div>
            ${contactHTML}
        </div>`,
        
        // –°–ª–∞–π–¥ 2 - –†–ï–ê–õ–ò–ó–£–Æ
        `<div class="slide" id="slide2">
            <div class="header">
                <span class="emoji">üòá</span>
                <span class="text">God & Devils</span>
                <span class="emoji">üòà</span>
            </div>
            <div class="main">
                <h1 class="big-text">–†–ï–ê–õ–ò–ó–£–Æ –õ–Æ–ë–£–Æ&nbsp;–í–ê–®–£ –ò–î–ï–Æ&nbsp;–í&nbsp;–ö–û–î–ï</h1>
            </div>
            ${contactHTML}
        </div>`,
        
        // –°–ª–∞–π–¥ 3 - –°–û–ó–î–ê–Æ
        `<div class="slide" id="slide3">
            <div class="header">
                <span class="emoji">üòá</span>
                <span class="text">God & Devils</span>
                <span class="emoji">üòà</span>
            </div>
            <div class="main">
                <h1 class="big-text">–°–û–ó–î–ê–Æ&nbsp;–ú–ù–û–ì–û –§–£–ù–ö–¶–ò–û–ù–ê–õ–¨–ù–´–ï WEB&#8209;–°–ï–†–í–ò–°–´</h1>
            </div>
            ${contactHTML}
        </div>`,
        
        // –°–ª–∞–π–¥ 4 - –ò–ù–°–¢–†–£–ú–ï–ù–¢–´
        `<div class="slide" id="slide4">
            <div class="header">
                <span class="emoji">üòá</span>
                <span class="text">God & Devils</span>
                <span class="emoji">üòà</span>
            </div>
            <div class="main skills-main">
                <div class="skills-content-wrapper">
                    <h1 class="skills-title">–ë–ê–ó–û–í–´–ï –ò–ù–°–¢–†–£–ú–ï–ù–¢–´</h1>
                    <div class="skills-grid">
                        <div class="skill-column">
                            <h3>Backend:</h3>
                            <p>Python<br>Flask<br>Node.js<br>Express.js<br>Telegram API<br>Session Management<br>ngrok</p>
                        </div>
                        <div class="skill-column">
                            <h3>Frontend:</h3>
                            <p>HTML5<br>CSS3<br>Vanilla JavaScript<br>Fetch API</p>
                            <h3>–ë–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:</h3>
                            <p>SQLite<br>LocalStorage<br>File Storage</p>
                        </div>
                        <div class="skill-column">
                            <h3>–î–µ–ø–ª–æ–π:</h3>
                            <p>ngrok<br>Local Development<br>File System<br>–õ—é–±–æ–π –¥—Ä—É–≥–æ–π —Å–µ—Ä–≤–µ—Ä</p>
                            <h3>API:</h3>
                            <p>Telegram API<br>–õ—é–±–æ–µ –¥—Ä—É–≥–æ–µ API</p>
                        </div>
                        <div class="skill-column">
                            <h3>–ë–∏–±–ª–∏–æ—Ç–µ–∫–∏:</h3>
                            <p>requests<br>sqlite3<br>telegram (gramJS)<br>@google/generative-ai<br>node-telegram-bot-api<br>input<br>hashlib<br>hmac<br>time<br>urllib<br>datetime<br>re<br>os<br>sys</p>
                        </div>
                        <div class="skill-column">
                            <h3>–§–æ—Ä–º–∞—Ç—ã:</h3>
                            <p>UTF-8<br>ISO<br>JSON<br>StringSession</p>
                        </div>
                    </div>
                </div>
            </div>
            ${contactHTML}
        </div>`,
        
        // –°–ª–∞–π–¥ 5 - –ú–û–ò –ü–†–û–ï–ö–¢–´
        `<div class="slide" id="slide5">
            <div class="header">
                <span class="emoji">üòá</span>
                <span class="text">God & Devils</span>
                <span class="emoji">üòà</span>
            </div>
            <div class="main">
                <h1 class="big-text">–≠–¢–ò&nbsp;–ü–†–û–ï–ö–¢–´ –°–ö–ê–ñ–£–¢&nbsp;–°–ê–ú–ò –ó–ê&nbsp;–ú–ï–ù–Ø >>></h1>
            </div>
            ${contactHTML}
        </div>`
    ];
}
function generateProjectSlides() {
    const projects = getProjectsData();
    const contactHTML = getContactHTML();
    
    return projects.map((project, index) => {
        const slideNumber = 6 + index;
        
        // –†–∞–∑–±–∏–≤–∞–µ–º README –Ω–∞ —Å—Ç—Ä–æ–∫–∏ –¥–ª—è –Ω—É–º–µ—Ä–∞—Ü–∏–∏
        const readmeText = project.readme || `# ${project.title}\n\nüîó **GitHub**: [${project.url}](${project.url})\nüìù –ü–æ–ª–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏`;
        const lines = readmeText.split('\n');
        
        // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –Ω–æ–º–µ—Ä–∞ —Å—Ç—Ä–æ–∫
        const lineNumbers = lines.map((_, i) => `<span>${i + 1}</span>`).join('');
        
        // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å –ø–æ–¥—Å–≤–µ—Ç–∫–æ–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞
        const codeLines = lines.map(line => {
            if (line.startsWith('#')) {
                return `<div class="markdown-header">${line}</div>`;
            } else if (line.includes('**') && line.includes('**')) {
                return `<div class="markdown-bold">${line}</div>`;
            } else if (line.includes('[') && line.includes('](')) {
                return `<div class="markdown-link">${line}</div>`;
            } else {
                return `<div>${line || ' '}</div>`;
            }
        }).join('');
        
        return `
            <div class="slide" id="slide${slideNumber}">
                <div class="header">
                    <span class="emoji">üòá</span>
                    <span class="text">God & Devils</span>
                    <span class="emoji">üòà</span>
                </div>
                <div class="main project-content">
                    <div class="project-number">#${project.number}</div>
                    <div class="project-info">
                        <p class="project-description">–í—Å–µ –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –∑–¥–µ—Å—å:</p>
                        <div class="code-editor">
                            <div class="code-editor-header">
                                <div class="editor-tabs">
                                    <span class="tab active">README.md</span>
                                </div>
                                <div class="editor-controls">
                                    <span class="control red"></span>
                                    <span class="control yellow"></span>
                                    <span class="control green"></span>
                                </div>
                            </div>
                            <div class="code-editor-content">
                                <div class="line-numbers">${lineNumbers}</div>
                                <div class="code-text">${codeLines}</div>
                            </div>
                        </div>
                    </div>
                </div>
                ${contactHTML}
            </div>
        `;
    });
}
function generateFinalSlide() {
    const projects = getProjectsData();
    const finalSlideNumber = 6 + projects.length;
    const contactHTML = getContactHTML();
    
    return `
        <div class="slide" id="slide${finalSlideNumber}">
            <div class="header">
                <span class="emoji">üòá</span>
                <span class="text">God & Devils</span>
                <span class="emoji">üòà</span>
            </div>
            <div class="main">
                <h1 class="hello-text">&lt;/ GOODBYE&gt;</h1>
            </div>
            ${contactHTML}
        </div>
    `;
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≤—Å–µ—Ö —Å–ª–∞–π–¥–æ–≤
function generateAllSlides() {
    console.log('=== –ì–ï–ù–ï–†–ê–¶–ò–Ø –í–°–ï–• –°–õ–ê–ô–î–û–í ===');
    const sliderContainer = document.querySelector('.slider-container');
    
    if (!sliderContainer) {
        console.error('–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å–ª–∞–π–¥–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω!');
        return;
    }
    
    // –û—á–∏—â–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
    sliderContainer.innerHTML = '';
    console.log('–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –æ—á–∏—â–µ–Ω');
    
    // –°–æ–±–∏—Ä–∞–µ–º –≤—Å–µ —Å–ª–∞–π–¥—ã
    const allSlides = [
        ...generateBaseSlides(),
        ...generateProjectSlides(),
        generateFinalSlide()
    ];
    
    // –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ —Å–ª–∞–π–¥—ã –≤ DOM
    allSlides.forEach(slideHTML => {
        sliderContainer.innerHTML += slideHTML;
    });
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    updateNavigationVariables();
    
    console.log('=== –†–ï–ó–£–õ–¨–¢–ê–¢ ===');
    console.log('–í—Å–µ–≥–æ —Å–ª–∞–π–¥–æ–≤:', window.totalSlides);
    console.log('DOM —ç–ª–µ–º–µ–Ω—Ç–æ–≤:', document.querySelectorAll('.slide').length);
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–π —Å–ª–∞–π–¥
    const slides = document.querySelectorAll('.slide');
    if (slides.length > 0) {
        showSlide(0);
    }
}

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ —ç–∫—Å–ø–æ—Ä—Ç—ã
window.generateAllSlides = generateAllSlides;
window.generateBaseSlides = generateBaseSlides;
window.generateProjectSlides = generateProjectSlides;
window.generateFinalSlide = generateFinalSlide;